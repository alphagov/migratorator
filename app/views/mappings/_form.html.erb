<div class="row">
  <div class="span12">
    <%= nested_form_for @mapping, :html => { :class => "well" } do |f| %>

  <% if @mapping.errors.any? %>
    <% @mapping.errors.full_messages.each do |message| %>
      <div class="alert alert-error"><%= message %></div>
    <% end %>
  <% end %>

  <p>
    <%= f.label :title %>
    <%= f.text_field :title, :class => 'span6' %>
  </p>

  <p>
    <%= f.label :old_url, "Old URL" %>
    <%= f.text_field :old_url, :class => 'span6' %>
  </p>

  <p>
    <%= f.label :new_url, "New URL" %>
    <%= f.text_field :new_url, :class => 'span6' %>
  </p>

  <p>
    <%= f.label :status %>
    <%= f.select :status, [ ["301 - Redirect to new url", 301], ["410 - Show a gone page", 410] ], :include_blank => "Not yet decided" %>
  </p>

  <p>
    <%= f.label :tags_list, "Tags (separate with semicolons)" %>
    <%= f.text_field :tags_list, :class => 'span6 tags_autocomplete' %>
  </p>

  <p>
    <%= f.label :notes %>
    <%= f.text_area :notes, :rows => 4, :class => "span6" %>
  </p>

  <fieldset id="related-links">
    <legend>Related Links</legend>
    <%= f.fields_for :related_links do |f| %>
      <%= f.label :title, "Link Title" %>
      <%= f.text_field :title %>
      <%= f.label :title, "URL" %>
      <%= f.text_field :url, :placeholder => "http://" %>
      <%= f.link_to_remove "Remove this link" %>
    <% end %>
    <p><%= f.link_to_add "Add a link", :related_links %></p>
  </fieldset>

  <p>
    <%= f.submit ( @mapping.persisted? ? "Update Mapping" : "Create Mapping"), :class => 'btn btn-primary' %> &nbsp; or &nbsp;
    <%= link_to "Cancel", mappings_path, :class => 'btn' %>
  </p>

<% end %>
  </div>
</div>

<script type="text/javascript">
  var tags_input_box = $('input.tags_autocomplete');
  var tags_dropdown_box = $('<select class="tags_autocomplete_select span6" multiple></select>');

  tags_input_box.hide();
  tags_dropdown_box.insertAfter(tags_input_box);

  $.getJSON('<%= tags_path(:format => :json, :order => 'groups') %>', function(data) {
    var groups = { };

    $.each(data, function(key,tag) {
      tag = tag.tag;

      if (tag.group == null) { tag.group = "other"; }
      if (groups[tag.group] === undefined) { groups[tag.group] = []; }
      groups[tag.group].push(tag);
    });

    $.each(groups, function(group, tags) {
      group_html = '<optgroup label="'+ group +'">';
      for (x in tags) {
        tag = tags[x];
        group_html += '<option value="'+ tag.whole_tag +'">'+ tag.whole_tag +'</option>';
      }

      group_html += '</optgroup>';
      tags_dropdown_box.append(group_html);
    });

    if (tags_input_box.val()) {
      tags_dropdown_box.val( tags_input_box.val().split(', ') );
    }
    tags_dropdown_box.chosen();
  });

  $('form').submit( function(){
    tags_input_box.val( tags_dropdown_box.val().join(', ') );
    tags_dropdown_box.attr('disabled','disabled');
  });


</script>